//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SonarScanner.Shim {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SonarScanner.Shim.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à sonar-project.properties files are not understood by the SonarQube Scanner for MSBuild. Remove those files from the following folders: {0}.
        /// </summary>
        public static string ERR_ConflictingSonarProjectProperties {
            get {
                return ResourceManager.GetString("ERR_ConflictingSonarProjectProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An error occurred loading the analysis config file. Please check that it is a valid file and try again. Error: {0}.
        /// </summary>
        public static string ERR_ErrorLoadingConfigFile {
            get {
                return ResourceManager.GetString("ERR_ErrorLoadingConfigFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Expected to be called with one argument: the full path to the analysis config file.
        /// </summary>
        public static string ERR_InvalidCommandLineArgs {
            get {
                return ResourceManager.GetString("ERR_InvalidCommandLineArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The SonarQube MSBuild integration failed: SonarQube was unable to collect the required information about your projects.
        ///Possible causes:
        ///  1. The project has not been built - the project must be built in between the begin and end steps
        ///  2. An unsupported version of MSBuild has been used to build the project. Currently MSBuild 14.0 upwards are supported
        ///  3. The begin, build or end steps have not all been launched from the same folder.
        /// </summary>
        public static string ERR_NoProjectInfoFilesFound {
            get {
                return ResourceManager.GetString("ERR_NoProjectInfoFilesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No analysable projects were found but some duplicate project IDs were found. Possible cause: you are building multiple configurations (e.g. DEBUG|x86 and RELEASE|x64) at the same time, which is not supported by the SonarQube integration. Please build and analyse each configuration individually..
        /// </summary>
        public static string ERR_NoValidButDuplicateProjects {
            get {
                return ResourceManager.GetString("ERR_NoValidButDuplicateProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No analysable projects were found. SonarQube analysis will not be performed. Check the build summary report for details..
        /// </summary>
        public static string ERR_NoValidProjectInfoFiles {
            get {
                return ResourceManager.GetString("ERR_NoValidProjectInfoFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The SonarQube Scanner did not complete successfully.
        /// </summary>
        public static string ERR_SonarScannerExecutionFailed {
            get {
                return ResourceManager.GetString("ERR_SonarScannerExecutionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generating SonarQube project properties file to {0}.
        /// </summary>
        public static string MSG_GeneratingProjectProperties {
            get {
                return ResourceManager.GetString("MSG_GeneratingProjectProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Analysis property is already correctly set: {0}={1}.
        /// </summary>
        public static string MSG_MandatorySettingIsCorrectlySpecified {
            get {
                return ResourceManager.GetString("MSG_MandatorySettingIsCorrectlySpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The project does not contain any files that can analyzed by SonarQube. Project file: {0}.
        /// </summary>
        public static string MSG_NoFilesToAnalyze {
            get {
                return ResourceManager.GetString("MSG_NoFilesToAnalyze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The exclude flag has been set so the project will not be analyzed by SonarQube. Project file: {0}.
        /// </summary>
        public static string MSG_ProjectIsExcluded {
            get {
                return ResourceManager.GetString("MSG_ProjectIsExcluded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generation of the sonar-properties file failed. Unable to complete SonarQube analysis..
        /// </summary>
        public static string MSG_PropertiesGenerationFailed {
            get {
                return ResourceManager.GetString("MSG_PropertiesGenerationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The supplied Code Analysis ErrorLog file is not a valid json file: {0}.
        /// </summary>
        public static string MSG_SarifFileIsInvalid {
            get {
                return ResourceManager.GetString("MSG_SarifFileIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The supplied Code Analysis ErrorLog file is a valid json file and does not need to be fixed: {0}.
        /// </summary>
        public static string MSG_SarifFileIsValid {
            get {
                return ResourceManager.GetString("MSG_SarifFileIsValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No Code Analysis ErrorLog file found at {0}..
        /// </summary>
        public static string MSG_SarifFileNotFound {
            get {
                return ResourceManager.GetString("MSG_SarifFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fixed invalid Code Analysis ErrorLog file. Please check that VS 2015 Update 1 (or later) is installed. Fixed file: {0}.
        /// </summary>
        public static string MSG_SarifFixSuccess {
            get {
                return ResourceManager.GetString("MSG_SarifFixSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Setting analysis property: {0}={1}.
        /// </summary>
        public static string MSG_SettingAnalysisProperty {
            get {
                return ResourceManager.GetString("MSG_SettingAnalysisProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Calling the SonarQube Scanner....
        /// </summary>
        public static string MSG_SonarScannerCalling {
            get {
                return ResourceManager.GetString("MSG_SonarScannerCalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The SonarQube Scanner has finished.
        /// </summary>
        public static string MSG_SonarScannerCompleted {
            get {
                return ResourceManager.GetString("MSG_SonarScannerCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The SONAR_SCANNER_HOME environment variable is not required and will be ignored..
        /// </summary>
        public static string MSG_SonarScannerHomeIsSet {
            get {
                return ResourceManager.GetString("MSG_SonarScannerHomeIsSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} is already set. Value: {1}.
        /// </summary>
        public static string MSG_SonarScannerOptsAlreadySet {
            get {
                return ResourceManager.GetString("MSG_SonarScannerOptsAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} is not configured. Setting it to the default value of {1}.
        /// </summary>
        public static string MSG_SonarScannerOptsDefaultUsed {
            get {
                return ResourceManager.GetString("MSG_SonarScannerOptsDefaultUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Writing processing summary to {0}.
        /// </summary>
        public static string MSG_WritingSummary {
            get {
                return ResourceManager.GetString("MSG_WritingSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Excluded projects.
        /// </summary>
        public static string REPORT_ExcludedProjectsTitle {
            get {
                return ResourceManager.GetString("REPORT_ExcludedProjectsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invalid projects.
        /// </summary>
        public static string REPORT_InvalidProjectsTitle {
            get {
                return ResourceManager.GetString("REPORT_InvalidProjectsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {none}.
        /// </summary>
        public static string REPORT_NoProjectsOfType {
            get {
                return ResourceManager.GetString("REPORT_NoProjectsOfType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Product projects.
        /// </summary>
        public static string REPORT_ProductProjectsTitle {
            get {
                return ResourceManager.GetString("REPORT_ProductProjectsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Skipped projects.
        /// </summary>
        public static string REPORT_SkippedProjectsTitle {
            get {
                return ResourceManager.GetString("REPORT_SkippedProjectsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Test projects.
        /// </summary>
        public static string REPORT_TestProjectsTitle {
            get {
                return ResourceManager.GetString("REPORT_TestProjectsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Code coverage report does not exist at the specified location. Path: {0}.
        /// </summary>
        public static string WARN_CodeCoverageReportNotFound {
            get {
                return ResourceManager.GetString("WARN_CodeCoverageReportNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Duplicate project GUID: &quot;{0}&quot;. Check that the project is only being built for a single platform/configuration and that that the project guid is unique. The project will not be analyzed by SonarQube. Project file: {1}.
        /// </summary>
        public static string WARN_DuplicateProjectGuid {
            get {
                return ResourceManager.GetString("WARN_DuplicateProjectGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à File referenced in the project does not exist: {0}.
        /// </summary>
        public static string WARN_FileDoesNotExist {
            get {
                return ResourceManager.GetString("WARN_FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à File is not under the project directory and cannot currently be analysed by SonarQube. File: {0}, project: {1}.
        /// </summary>
        public static string WARN_FileIsOutsideProjectDirectory {
            get {
                return ResourceManager.GetString("WARN_FileIsOutsideProjectDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à FxCop analysis report does not exist at the specified location. Path: {0}.
        /// </summary>
        public static string WARN_FxCopReportNotFound {
            get {
                return ResourceManager.GetString("WARN_FxCopReportNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The project has an invalid GUID &quot;{0}&quot;. The project will not be analyzed by SonarQube. Project file: {1}.
        /// </summary>
        public static string WARN_InvalidProjectGuid {
            get {
                return ResourceManager.GetString("WARN_InvalidProjectGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Could not determine default project encoding, therefore {0} is being selected..
        /// </summary>
        public static string WARN_NoEncoding {
            get {
                return ResourceManager.GetString("WARN_NoEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overriding analysis property. Effective value: {0}={1}.
        /// </summary>
        public static string WARN_OverridingAnalysisProperty {
            get {
                return ResourceManager.GetString("WARN_OverridingAnalysisProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Property &quot;{0}&quot; is defined, but will be ignored during analysis..
        /// </summary>
        public static string WARN_PropertyIgnored {
            get {
                return ResourceManager.GetString("WARN_PropertyIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to fix Code Analysis ErrorLog file. Please check that VS 2015 Update 1 (or later) is installed..
        /// </summary>
        public static string WARN_SarifFixFail {
            get {
                return ResourceManager.GetString("WARN_SarifFixFail", resourceCulture);
            }
        }
    }
}
