<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
  This project packages the assemblies and targets files that form the "sonarqube.msbuild.runner" that needs to be copied to the XAML build agents
  -->
  <!-- These PropertyGroups seem to be needed otherwise VS does not recognize Release as a configuration option for this project
  and it will default to Debug even if the solution is set to build in Release -->
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{ECEADD3A-5992-420F-950D-510BBDDC06E1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SonarQubeExclude>True</SonarQubeExclude>
    <ScannerCliVersion Condition=" $(ScannerCliVersion) == '' ">3.0.3.778</ScannerCliVersion>
    <ScannerCliArtifact>sonar-scanner-cli-$(ScannerCliVersion).zip</ScannerCliArtifact>
    <ScannerCliDirectory>sonar-scanner-$(ScannerCliVersion)</ScannerCliDirectory>
    <MavenCentralUrl>https://repox.sonarsource.com/sonarsource-public-releases/org/sonarsource/scanner/cli/sonar-scanner-cli/$(ScannerCliVersion)/$(ScannerCliArtifact)</MavenCentralUrl>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup>
    <SourcesRoot>$(MSBuildThisFileFullPath)\..\..\..</SourcesRoot>
    <DestinationDir>$(SourcesRoot)\DeploymentArtifacts\BuildAgentPayload\$(Configuration)\</DestinationDir>
    <WorkDestinationDir>$(DestinationDir)Work</WorkDestinationDir>
    <!-- OutputPath is required by the Clean and Rebuild tasks -->
  </PropertyGroup>
  <ItemGroup>
    <FilesToCopy Include="$(SourcesRoot)\SonarQube.Scanner.MSBuild\bin\$(Configuration)\net46\SonarQube.Scanner.MSBuild.exe" />
    <FilesToCopy Include="$(SourcesRoot)\SonarQube.Old.Bootstrapper\bin\$(Configuration)\net46\MSBuild.SonarQube.Runner.exe" />
    <FilesToCopy Include="$(SourcesRoot)\SonarQube.Scanner.MSBuild\bin\$(Configuration)\net46\SonarQube.Analysis.xml" />
    <FilesToCopy Include="$(SourcesRoot)\SonarQube.Common\bin\$(Configuration)\net46\SonarQube.Common.dll" />
    <FilesToCopy Include="$(SourcesRoot)\SonarQube.Scanner.Begin\bin\$(Configuration)\net46\MSBuild.SonarQube.Internal.PreProcess.dll" />
    <FilesToCopy Include="$(SourcesRoot)\SonarQube.Scanner.End\bin\$(Configuration)\net46\MSBuild.SonarQube.Internal.PostProcess.dll" />
    <FilesToCopy Include="$(SourcesRoot)\SonarScanner.Shim\bin\$(Configuration)\net46\SonarScanner.Shim.dll" />
    <FilesToCopy Include="$(SourcesRoot)\SonarScanner.Shim\bin\$(Configuration)\net46\Newtonsoft.Json.dll" />
    <FilesToCopy Include="$(SourcesRoot)\SonarScanner.Shim\bin\$(Configuration)\net46\System.ValueTuple.dll" />
    <FilesToCopy Include="$(SourcesRoot)\SonarQube.TeamBuild.Integration\bin\$(Configuration)\net46\TeamBuild.SonarQube.Integration.dll" />
    <FilesToCopy Include="$(SourcesRoot)\SonarQube.MSBuild.Tasks\bin\$(Configuration)\net46\SonarQube.Integration.Tasks.dll" />
    <TargetsToCopy Include="$(SourcesRoot)\SonarQube.MSBuild.Tasks\bin\$(Configuration)\net46\Targets\SonarQube.Integration.targets" />
    <TargetsToCopy Include="$(SourcesRoot)\SonarQube.MSBuild.Tasks\bin\$(Configuration)\net46\Targets\SonarQube.Integration.ImportBefore.targets" />
  </ItemGroup>
  <ItemGroup Condition="$(Configuration) == 'Debug'">
    <FilesToCopy Include="$(SourcesRoot)\SonarQube.Scanner.MSBuild\bin\$(Configuration)\net46\SonarQube.Scanner.MSBuild.pdb" />
    <FilesToCopy Include="$(SourcesRoot)\SonarQube.Old.Bootstrapper\bin\$(Configuration)\net46\MSBuild.SonarQube.Runner.pdb" />
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config">
      <SubType>Designer</SubType>
    </None>
  </ItemGroup>
  <UsingTask TaskName="DownloadFile" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <Url ParameterType="System.String" Required="true" />
      <File ParameterType="System.String" Required="false" />
      <OutputFolder ParameterType="System.String" Required="false" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.Web" />
      <Code Type="Fragment" Language="cs"><![CDATA[
        using (var client = new System.Net.WebClient())
            { client.DownloadFile(Url, (OutputFolder != null ? OutputFolder + "/" : "") + (File ?? System.IO.Path.GetFileName(new Uri(Url).LocalPath))); }
        ]]></Code>
    </Task>
  </UsingTask>
  <Target Name="CreatePayload" AfterTargets="Build">
    <CallTarget Targets="CleanExistingPayload" />
    <CallTarget Targets="DownloadScannerCli" />
    <CallTarget Targets="UnzipScannerCli" />
    <CallTarget Targets="CopyPayloadFiles" />
    <CallTarget Targets="ZipPayloadFiles" />
  </Target>
  <Target Name="CopyPayloadFiles">
    <Copy SourceFiles="@(FilesToCopy)" DestinationFolder="$(WorkDestinationDir)\%(RecursiveDir)" />
    <Copy SourceFiles="@(TargetsToCopy)" DestinationFolder="$(WorkDestinationDir)\Targets" />
  </Target>
  <Target Name="DownloadScannerCli" Condition="!Exists('$(OutputPath)\$(ScannerCliArtifact)')">
    <Message Text="Downloading: $(MavenCentralUrl)" />
    <DownloadFile Url="$(MavenCentralUrl)" OutputFolder="$(OutputPath)" />
  </Target>
  <Target Name="UnzipScannerCli">
    <RemoveDir Directories="$(OutputPath)$(ScannerCliDirectory)" />
    <Exec Command="powershell.exe -executionpolicy bypass -command &quot;Add-Type -assembly system.io.compression.filesystem; [io.compression.zipfile]::ExtractToDirectory('$(OutputPath)$(ScannerCliArtifact)', '$(WorkDestinationDir)')&quot;" />
  </Target>
  <Target Name="ZipPayloadFiles">
    <Exec Command="powershell.exe -executionpolicy bypass -command &quot;Add-Type -assembly system.io.compression.filesystem; Add-Type -assembly system.text.encoding; Add-Type -TypeDefinition 'public class MyEncoder : System.Text.UTF8Encoding { public MyEncoder() : base(true) {} public override byte[] GetBytes(string s) { return base.GetBytes(s.Replace((char) 92, (char) 47)); } }'; $enc = New-Object MyEncoder; [io.compression.zipfile]::CreateFromDirectory('$(WorkDestinationDir)', '$(DestinationDir)\SonarQube.Scanner.MSBuild.zip', [io.compression.compressionlevel]::fastest, $false, $enc)&quot;" />
  </Target>
  <Target Name="CleanExistingPayload" AfterTargets="Clean">
    <RemoveDir Directories="$(DestinationDir)" />
  </Target>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
</Project>