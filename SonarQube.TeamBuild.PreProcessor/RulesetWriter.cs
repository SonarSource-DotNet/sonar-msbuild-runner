/*
 * SonarQube Scanner for MSBuild
 * Copyright (C) 2015-2017 SonarSource SA and Microsoft Corporation
 * mailto: contact AT sonarsource DOT com
 *
 * Licensed under the MIT License.
 * See LICENSE file in the project root for full license information.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SonarQube.TeamBuild.PreProcessor
{
    public static class RulesetWriter
    {
        public static string ToString(IEnumerable<string> ids)
        {
            IEnumerable<string> effectiveIds = ids ?? Enumerable.Empty<string>();
            
            var duplicates = effectiveIds.GroupBy(id => id).Where(g => g.Count() >= 2).Select(g => g.Key);
            if (duplicates.Any())
            {
                string message = string.Format(System.Globalization.CultureInfo.CurrentCulture, 
                    Resources.ERROR_DuplicateCheckId, string.Join(", ", duplicates));
                throw new ArgumentException(message);
            }

            StringBuilder sb = new StringBuilder();

            sb.AppendLine("<?xml version=\"1.0\" encoding=\"utf-8\"?>");
            sb.AppendLine("<RuleSet Name=\"SonarQube\" Description=\"Rule set generated by SonarQube\" ToolsVersion=\"12.0\">");

            sb.AppendLine("  <Rules AnalyzerId=\"Microsoft.Analyzers.ManagedCodeAnalysis\" RuleNamespace=\"Microsoft.Rules.Managed\">");
            foreach (string id in effectiveIds)
            {
                sb.AppendLine("    <Rule Id=\"" + id + "\" Action=\"Warning\" />");
            }
            sb.AppendLine("  </Rules>");

            sb.AppendLine("</RuleSet>");

            return sb.ToString();
        }
    }
}
